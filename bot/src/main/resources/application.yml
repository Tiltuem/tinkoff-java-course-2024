app:
  telegram-token: 6986184535:AAENkty0j1ZiWLiD2X2itsjcKHanQ7SnxpU
  retry:
    http-statuses: 429, 500
    type: linear
    max-attempts: 10
    config:
      initial-interval-millis: 5000
      max-interval-millis: 50000
      multiplier: 2
  kafka-config:
    servers: localhost:9091,localhost:9092,localhost:9093
    updates-topic:
      name: updates
      partitions: 2
      replicas: 2
  micrometer:
    processed-messages-counter:
      name: messages.processed
      description: Number of processed messages from telegram api

client:
  scrapper:
    base-url: http://localhost:8080

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  cache:
    cache-names:
      - bot-rate-limit
    caffeine:
      spec: maximumSize=200000,expireAfterAccess=60s

springdoc:
  swagger-ui:
    path: /swagger-ui

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

bucket4j:
  filters:
    - cache-name: bot-rate-limit
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"Too Many Requests\" }"
      rate-limits:
        - bandwidths:
            - capacity: 100
              refill-speed: interval
              time: 1
              unit: minutes
      url: /.*

management:
  server:
    port: 8091
  endpoints:
    web:
      base-path: /
      path-mapping:
        prometheus: metrics
      exposure:
        include: health,info,prometheus
    enabled-by-default: false
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
